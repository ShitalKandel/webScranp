#Import necessary modules 

import smtplib
'''Used to send mail to any internet machine with an Simple Mail
Transport Protocol'''

import pandas as pd
'''
Allows us to analye and manage big data,
Main use of this module is to work with data set including formating it in different data sets.
'''

from email.mime.multipart import MIMEMultipart
'''MIME(Multipart Mail Extension is an extension of SMTP that let's 
user to exchange different data through email)'''
from email.mime.text import MIMEText

import ssl
'''Provides built in function and classes to use Secure Socket Layer
and Transport Security Layer to secure both communication server
including client side.'''

sender_email = 'lewishacker4@gmail.com'#sender email (host_name) from where we will send email

receiver_email = input('Enter your gmail:')#receiver email from input

sender_app_password = 'faixvssubgtmipvk'
'''app password generated by 2factor authentication allows secure approach for automation
'''


subject = "Check if this mail is useful."
body = '''
Dear sir/mam,

    I hope this email finds you well. It is to notify that my email 
    automation task has been completed.
'''
a = pd.read_csv('dec_19.csv')#reading csv file using pandas module
html_table = a.to_html(index=False)#formating pandas module in html 

# Creating MIME object for email
em = MIMEMultipart()
em['From'] = sender_email
em['To'] = receiver_email
em['Subject'] = subject
em.attach(MIMEText(body, 'html'))

# Attach HTML content to the email
em.attach(MIMEText(html_table, 'html'))

# Create a secure SSL context for the email server connection
context = ssl.create_default_context()

try:
    # Use host and port for Gmail SMTP server
    with smtplib.SMTP_SSL('smtp.gmail.com', 465, context=context) as smtpObj:

        #login to email server with user email , application password
        smtpObj.login(sender_email, sender_app_password)

        #assigning sender, receiver, and body of email as string format
        smtpObj.sendmail(sender_email, receiver_email, em.as_string())
        print("Email sent successfully!")



except smtplib.SMTPRecipientsRefused as e:
    print(f"Error: {e}")
    print(f"The recipient's email address '{receiver_email}' is invalid.")



#make an exception if an erorr occurs during sending error
except Exception as e:
    print(f"An error occurred: {e}")
